knitr::opts_chunk$set(cache = TRUE, fig.align = "center", fig.height = 4, fig.width = 8)
library(ggthemes)
library(ggthemes)
library(httr)
library(lubridate)
library(plotly)
library(tidyverse)
# https://stackoverflow.com/questions/25485216/how-to-get-list-files-from-a-github-repository-folder-using-r
req <- GET("https://api.github.com/repos/JeffSackmann/tennis_atp/git/trees/master?recursive=1")
stop_for_status(req)
file_list <- unlist(lapply(content(req)$tree, "[", "path"), use.names = F)
# Source of all .csv files
github_master_url <- "https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/"
# https://stackoverflow.com/questions/11433432/how-to-import-multiple-csv-files-at-once
atp_tennis_raw_data <-
as_tibble(file_list[str_detect(file_list, "atp_matches_([:digit:]{4}).csv")]) %>%
mutate(file_path = paste0(github_master_url, value)) %>%
select(file_path) %>%
map_df( ~ read_csv(., col_type = cols(.default = "c")))
write_csv(atp_tennis_raw_data, "atp_matches.csv")
# Common column types for .csv files of interest
c_types <-
c(
tourney_id    = "c",
tourney_name  = "f",
surface       = "f",
draw_size     = "i",
tourney_level = "f",
tourney_date  = "c",
match_num     = "c",
winner_id    = "c",
winner_seed  = "f",
winner_entry = "f",
winner_name  = "c",
winner_hand  = "f",
winner_ht    = "d",
winner_ioc   = "f",
winner_age   = "d",
loser_id    = "c",
loser_seed  = "f",
loser_entry = "f",
loser_name  = "c",
loser_hand  = "f",
loser_ht    = "d",
loser_ioc   = "f",
loser_age   = "d",
score   = "c",
best_of = "i",
round   = "f",
minutes = "i",
w_ace     = "i",
w_df      = "i",
w_svpt    = "i",
w_1stIn   = "i",
w_1stWon  = "i",
w_2ndWon  = "i",
w_SvGms   = "i",
w_bpSaved = "i",
w_bpFaced = "i",
l_ace     = "i",
l_df      = "i",
l_svpt    = "i",
l_1stIn   = "i",
l_1stWon  = "i",
l_2ndWon  = "i",
l_SvGms   = "i",
l_bpSaved = "i",
l_bpFaced = "i",
winner_rank        = "i",
winner_rank_points = "i",
loser_rank         = "i",
loser_rank_points  = "i"
)
atp_tennis <- read_csv("atp_matches.csv", col_types = c_types) %>%
mutate(tourney_date = ymd(tourney_date))
gs_matches <- atp_tennis %>%
filter(tourney_level == "G") %>%
select(tourney_id,
tourney_name,
surface,
tourney_date,
winner_id,
winner_name,
winner_age,
loser_id,
loser_name,
loser_age) %>%
unite(winner_id, winner_name, col = "winner", sep = ";") %>%
unite(loser_id, loser_name, col = "loser", sep = ";") %>%
pivot_longer(cols = c(winner, loser), names_to = "outcome", values_to = "player") %>%
separate(player, into = c("player_id", "player_name"), sep = ";") %>%
mutate(player_age = ifelse(outcome == "winner", winner_age, loser_age)) %>%
select(-c(winner_age, loser_age)) %>%
group_by(player_id, player_name) %>%
arrange(tourney_date) %>%
inner_join(gs_winners, by = c("player_id", "player_name"))
gs_matches <- atp_tennis %>%
filter(tourney_level == "G") %>%
select(tourney_id,
tourney_name,
surface,
tourney_date,
winner_id,
winner_name,
winner_age,
loser_id,
loser_name,
loser_age) %>%
unite(winner_id, winner_name, col = "winner", sep = ";") %>%
unite(loser_id, loser_name, col = "loser", sep = ";") %>%
pivot_longer(cols = c(winner, loser), names_to = "outcome", values_to = "player") %>%
separate(player, into = c("player_id", "player_name"), sep = ";") %>%
mutate(player_age = ifelse(outcome == "winner", winner_age, loser_age)) %>%
select(-c(winner_age, loser_age)) %>%
group_by(player_id, player_name) %>%
arrange(tourney_date)
View(gs_matches)
View(gs_matches)
gs_matches <- atp_tennis %>%
filter(tourney_level == "G") %>%
select(tourney_id,
tourney_name,
surface,
tourney_date,
winner_id,
winner_name,
winner_age,
loser_id,
loser_name,
loser_age) %>%
unite(winner_id, winner_name, col = "winner", sep = ";") %>%
unite(loser_id, loser_name, col = "loser", sep = ";") %>%
pivot_longer(cols = c(winner, loser), names_to = "outcome", values_to = "player") %>%
separate(player, into = c("player_id", "player_name"), sep = ";") %>%
mutate(player_age = ifelse(outcome == "winner", winner_age, loser_age)) %>%
select(-c(winner_age, loser_age)) %>%
group_by(player_id, player_name) %>%
arrange(tourney_date) %>%
#inner_join(gs_winners, by = c("player_id", "player_name")) %>%
mutate(floor_age = floor(player_age),
win = ifelse(round == "F" & outcome == "winner", 1, 0))
View(gs_matches)
View(atp_tennis)
gs_matches <- atp_tennis %>%
filter(tourney_level == "G") %>%
select(tourney_id,
tourney_name,
surface,
tourney_date,
winner_id,
winner_name,
winner_age,
loser_id,
loser_name,
loser_age,
round) %>%
unite(winner_id, winner_name, col = "winner", sep = ";") %>%
unite(loser_id, loser_name, col = "loser", sep = ";") %>%
pivot_longer(cols = c(winner, loser), names_to = "outcome", values_to = "player") %>%
separate(player, into = c("player_id", "player_name"), sep = ";") %>%
mutate(player_age = ifelse(outcome == "winner", winner_age, loser_age)) %>%
select(-c(winner_age, loser_age)) %>%
group_by(player_id, player_name) %>%
arrange(tourney_date) %>%
#inner_join(gs_winners, by = c("player_id", "player_name")) %>%
mutate(floor_age = floor(player_age),
win = ifelse(round == "F" && outcome == "winner", 1, 0))
View(gs_matches)
filter(gs_matches, round == "F", outcome == "winner")
gs_matches <- atp_tennis %>%
filter(tourney_level == "G") %>%
select(tourney_id,
tourney_name,
surface,
tourney_date,
winner_id,
winner_name,
winner_age,
loser_id,
loser_name,
loser_age,
round) %>%
unite(winner_id, winner_name, col = "winner", sep = ";") %>%
unite(loser_id, loser_name, col = "loser", sep = ";") %>%
pivot_longer(cols = c(winner, loser), names_to = "outcome", values_to = "player") %>%
separate(player, into = c("player_id", "player_name"), sep = ";") %>%
mutate(player_age = ifelse(outcome == "winner", winner_age, loser_age)) %>%
select(-c(winner_age, loser_age)) %>%
group_by(player_id, player_name) %>%
arrange(tourney_date) %>%
#inner_join(gs_winners, by = c("player_id", "player_name")) %>%
mutate(floor_age = floor(player_age),
win = ifelse((round == "F" && outcome == "winner"), 1, 0))
gs_matches <- atp_tennis %>%
filter(tourney_level == "G") %>%
select(tourney_id,
tourney_name,
surface,
tourney_date,
winner_id,
winner_name,
winner_age,
loser_id,
loser_name,
loser_age,
round) %>%
unite(winner_id, winner_name, col = "winner", sep = ";") %>%
unite(loser_id, loser_name, col = "loser", sep = ";") %>%
pivot_longer(cols = c(winner, loser), names_to = "outcome", values_to = "player") %>%
separate(player, into = c("player_id", "player_name"), sep = ";") %>%
mutate(player_age = ifelse(outcome == "winner", winner_age, loser_age)) %>%
select(-c(winner_age, loser_age)) %>%
group_by(player_id, player_name) %>%
arrange(tourney_date)
View(gs_matches)
gs_matches %>% filter(round == "F")
gs_matches %>% filter(round == "F", outcome == "winner")
gs_matches %>%
mutate(win = ifelse(round == "F" && outcome == "winner", 1, 0)) %>%
filter(round == "F", outcome == "winner")
gs_matches %>%
mutate(win = case_when(round == "F" && outcome == "winner" ~ 1,
TRUE ~ 0)) %>%
filter(round == "F", outcome == "winner")
gs_matches %>%
mutate(win = case_when(round == "F" ~ 1,
TRUE ~ 0)) %>%
filter(round == "F", outcome == "winner")
gs_matches %>%
mutate(win = case_when(round == "F" & outcome == "winner" ~ 1,
TRUE ~ 0)) %>%
filter(round == "F", outcome == "winner")
gs_matches <- atp_tennis %>%
filter(tourney_level == "G") %>%
select(tourney_id,
tourney_name,
surface,
tourney_date,
winner_id,
winner_name,
winner_age,
loser_id,
loser_name,
loser_age,
round) %>%
unite(winner_id, winner_name, col = "winner", sep = ";") %>%
unite(loser_id, loser_name, col = "loser", sep = ";") %>%
pivot_longer(cols = c(winner, loser), names_to = "outcome", values_to = "player") %>%
separate(player, into = c("player_id", "player_name"), sep = ";") %>%
mutate(player_age = ifelse(outcome == "winner", winner_age, loser_age)) %>%
select(-c(winner_age, loser_age)) %>%
group_by(player_id, player_name) %>%
arrange(tourney_date) %>%
#inner_join(gs_winners, by = c("player_id", "player_name")) %>%
mutate(floor_age = floor(player_age),
win = ifelse((round == "F" & outcome == "winner"), 1, 0))
View(gs_matches)
gs_matches <- atp_tennis %>%
filter(tourney_level == "G") %>%
select(tourney_id,
tourney_name,
surface,
tourney_date,
winner_id,
winner_name,
winner_age,
loser_id,
loser_name,
loser_age,
round) %>%
unite(winner_id, winner_name, col = "winner", sep = ";") %>%
unite(loser_id, loser_name, col = "loser", sep = ";") %>%
pivot_longer(cols = c(winner, loser), names_to = "outcome", values_to = "player") %>%
separate(player, into = c("player_id", "player_name"), sep = ";") %>%
mutate(player_age = ifelse(outcome == "winner", winner_age, loser_age)) %>%
select(-c(winner_age, loser_age)) %>%
group_by(player_id, player_name) %>%
arrange(tourney_date) %>%
#inner_join(gs_winners, by = c("player_id", "player_name")) %>%
mutate(floor_age = floor(player_age),
win = ifelse((round == "F" & outcome == "winner"), 1, 0)) %>%
#distinct(player_id, player_name, floor_age, year(tourney_date), .keep_all = TRUE) %>%
#select(-`year(tourney_date)`) %>%
#bind_rows(gs_wins) %>%
#group_by(player_id, player_name) %>%
arrange(player_id, player_name, tourney_date) %>%
mutate(cum_gs_wins = cumsum(win),
total_gs_wins = sum(win),
double_digits = ifelse(total_gs_wins >= 10, TRUE, FALSE),
big_3 = ifelse(player_name %in% c("Roger Federer", "Rafael Nadal", "Novak Djokovic"),
TRUE, FALSE))
View(gs_matches)
gs_matches <- atp_tennis %>%
filter(tourney_level == "G") %>%
select(tourney_id,
tourney_name,
surface,
tourney_date,
winner_id,
winner_name,
winner_age,
loser_id,
loser_name,
loser_age,
round) %>%
unite(winner_id, winner_name, col = "winner", sep = ";") %>%
unite(loser_id, loser_name, col = "loser", sep = ";") %>%
pivot_longer(cols = c(winner, loser), names_to = "outcome", values_to = "player") %>%
separate(player, into = c("player_id", "player_name"), sep = ";") %>%
mutate(player_age = if_else(outcome == "winner", winner_age, loser_age)) %>%
select(-c(winner_age, loser_age)) %>%
group_by(player_id, player_name) %>%
arrange(tourney_date) %>%
#inner_join(gs_winners, by = c("player_id", "player_name")) %>%
mutate(floor_age = floor(player_age),
win = if_else((round == "F" & outcome == "winner"), 1, 0)) %>%
#distinct(player_id, player_name, floor_age, year(tourney_date), .keep_all = TRUE) %>%
#select(-`year(tourney_date)`) %>%
#bind_rows(gs_wins) %>%
#group_by(player_id, player_name) %>%
arrange(player_id, player_name, tourney_date) %>%
mutate(cum_gs_wins = cumsum(win),
total_gs_wins = sum(win),
double_digits = if_else(total_gs_wins >= 10, TRUE, FALSE),
big_3 = if_else(player_name %in% c("Roger Federer", "Rafael Nadal", "Novak Djokovic"),
TRUE, FALSE))
gs_total_wins <- gs_matches %>%
arrange(desc(tourney_date)) %>%
slice_head(n = 1)
var <- "double_digits"
var <- "big_3"
# by age
ggplot() +
# <10 wins
geom_line(data = filter(gs_matches, !(!!sym(var))),
aes(x = floor_age, y = cum_gs_wins, group = player_name),
color = "dark gray") +
geom_point(data = filter(gs_total_wins, !(!!sym(var))),
aes(x = floor_age, y = total_gs_wins, group = player_name),
color = "dark gray") +
# >=10 wins
geom_line(data = filter(gs_matches, !!sym(var)),
aes(x = floor_age, y = cum_gs_wins, color = player_name, group = player_name),
size = 1, alpha = 0.5) +
geom_point(data = filter(gs_total_wins, !!sym(var)),
aes(x = floor_age, y = total_gs_wins, color = player_name, group = player_name)) +
theme_few() +
theme(legend.position = "bottom")
View(gs_matches)
gs_wins <- filter(gs_matches, win > 0)
View(gs_wins)
# get names of players who have won at least 1 grand slam
gs_winners <- filter(gs_wins, win > 0) %>%
distinct(player_id, player_name)
View(gs_winners)
# get names of players who have won at least 1 grand slam
gs_winners <- filter(gs_wins, win > 0) %>%
distinct(player_id, player_name)
gs_matches_winners <- inner_join(gs_matches, gs_winners, by = c(player_id, player_name))
gs_matches_winners <- inner_join(gs_matches, gs_winners, by = c("player_id", "player_name"))
gs_total_wins <- gs_matches %>%
arrange(desc(tourney_date)) %>%
slice_head(n = 1)
# by age
ggplot() +
# <10 wins
geom_line(data = filter(gs_matches, !(!!sym(var))),
aes(x = floor_age, y = cum_gs_wins, group = player_name),
color = "dark gray") +
geom_point(data = filter(gs_total_wins, !(!!sym(var))),
aes(x = floor_age, y = total_gs_wins, group = player_name),
color = "dark gray") +
# >=10 wins
geom_line(data = filter(gs_matches, !!sym(var)),
aes(x = floor_age, y = cum_gs_wins, color = player_name, group = player_name),
size = 1, alpha = 0.5) +
geom_point(data = filter(gs_total_wins, !!sym(var)),
aes(x = floor_age, y = total_gs_wins, color = player_name, group = player_name)) +
theme_few() +
theme(legend.position = "bottom")
View(gs_matches_winners)
View(gs_winners)
gs_matches_winners <- inner_join(gs_matches, gs_winners, by = c("player_id", "player_name"))
View(gs_matches_winners)
# get names of players who have won at least 1 grand slam
gs_winners <- filter(gs_wins, total_gs_wins > 0) %>%
distinct(player_id, player_name)
# get names of players who have won at least 1 grand slam
gs_winners <- filter(gs_wins, win > 0) %>%
distinct(player_id, player_name)
gs_matches_winners <- inner_join(gs_matches, gs_winners, by = c("player_id", "player_name"))
gs_matches_winners <- right_join(gs_matches, gs_winners, by = c("player_id", "player_name"))
gs_matches_winners <- inner_join(gs_matches, gs_winners, by = c("player_id", "player_name"))
View(gs_matches_winners)
gs_total_wins <- gs_matches %>%
arrange(desc(tourney_date)) %>%
slice_head(n = 1)
View(gs_total_wins)
gs_total_wins <- gs_matches_winners %>%
arrange(desc(tourney_date)) %>%
slice_head(n = 1)
View(gs_total_wins)
# by age
ggplot() +
# <10 wins
geom_line(data = filter(gs_matches, !(!!sym(var))),
aes(x = floor_age, y = cum_gs_wins, group = player_name),
color = "dark gray") +
geom_point(data = filter(gs_total_wins, !(!!sym(var))),
aes(x = floor_age, y = total_gs_wins, group = player_name),
color = "dark gray") +
# >=10 wins
geom_line(data = filter(gs_matches, !!sym(var)),
aes(x = floor_age, y = cum_gs_wins, color = player_name, group = player_name),
size = 1, alpha = 0.5) +
geom_point(data = filter(gs_total_wins, !!sym(var)),
aes(x = floor_age, y = total_gs_wins, color = player_name, group = player_name)) +
theme_few() +
theme(legend.position = "bottom")
ggplot() +
# <10 wins
geom_line(data = filter(gs_matches, !(!!sym(var))),
aes(x = floor_age, y = cum_gs_wins, group = player_name),
color = "dark gray") +
geom_point(data = filter(gs_total_wins, !(!!sym(var))),
aes(x = floor_age, y = total_gs_wins, group = player_name),
color = "dark gray")
# by age
ggplot() +
# not big 3
geom_line(data = filter(gs_matches_winners, !(!!sym(var))),
aes(x = floor_age, y = cum_gs_wins, group = player_name),
color = "dark gray") +
geom_point(data = filter(gs_total_wins, !(!!sym(var))),
aes(x = floor_age, y = total_gs_wins, group = player_name),
color = "dark gray") +
# big 3
geom_line(data = filter(gs_matches_winners, !!sym(var)),
aes(x = floor_age, y = cum_gs_wins, color = player_name, group = player_name),
size = 1, alpha = 0.5) +
geom_point(data = filter(gs_total_wins, !!sym(var)),
aes(x = floor_age, y = total_gs_wins, color = player_name, group = player_name)) +
theme_few() +
theme(legend.position = "bottom")
p1 <- ggplot() +
# <10 wins
geom_line(data = filter(gs_matches_winners, !(!!sym(var))),
aes(x = year(tourney_date), y = cum_gs_wins, group = player_name),
color = "dark gray") +
geom_point(data = filter(gs_total_wins, !(!!sym(var))),
aes(x = year(tourney_date), y = total_gs_wins, group = player_name),
color = "dark gray") +
# >= 10 wins
geom_line(data = filter(gs_matches_winners, !!sym(var)),
aes(x = year(tourney_date), y = cum_gs_wins,
color = player_name, group = player_name)) +
geom_point(data = filter(gs_total_wins, !!sym(var)),
aes(x = year(tourney_date), y = total_gs_wins,
color = player_name,
group = player_name)) +
theme_few() +
theme(legend.position = "bottom")
#ggplotly(p1)
p1
